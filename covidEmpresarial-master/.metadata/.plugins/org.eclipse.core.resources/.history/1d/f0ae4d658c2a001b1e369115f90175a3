package com.usta.cmapp.control;

import java.io.IOException;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Properties;

import javax.annotation.PostConstruct;
import javax.ejb.EJB;
import javax.enterprise.context.SessionScoped;
import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.context.FacesContext;

import org.primefaces.event.FlowEvent;

import com.covidapp_mysql.model.City;
import com.covidapp_mysql.model.Person;
import com.covidapp_mysql.model.TypeDocument;
import com.usta.cmapp.constants.EnumDataBase;
import com.usta.cmapp.constants.EnumRhBlood;
import com.usta.covid_app.service.ServicesDao;

@ManagedBean(name = "prin")
@SessionScoped
public class PrincipalController implements Serializable{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	
	private Properties properties;
	private String userAcces;
	
	
	
	/**
	 * constructor class
	 */
	public PrincipalController() {
		
		try {
			properties = new Properties(); 
			userAcces = null;
			chargeProperties();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	/**
	 * init variables 
	 */
	private void chargeProperties() {
		try {
			properties.load(PrincipalController.class.getResourceAsStream("messages.properties"));
			userAcces = ((String) FacesContext.getCurrentInstance().getExternalContext()
					.getSessionMap().get(LoginController.USER_AUTENTICH)).toUpperCase();
		} catch (Exception e) {
			FacesContext.getCurrentInstance().addMessage(null, 
					new FacesMessage(FacesMessage.SEVERITY_ERROR, properties.getProperty("errorGeneral")
							, properties.getProperty("errorCargaPropiedades")));
		}
	}
	
	/**
	 * este metodo se inicializa tan pronto se carga la clase
	 * y despues que crea el constructor 
	 * No recibi de ningun cliente, el cliente es el mismo servidor
	 * cuando la aplicacion es inicializada.
	 */
	@PostConstruct
	public void chargeData() {
	}
	
	
	public String initCreate() {
		String res= null;
		try {
			///FacesContext.getCurrentInstance().getExternalContext().redirect("/inicio/inicio");
			//res = "/pages/inicio/inicio";
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return res;
	}
	
	
	public String logut() {
		
		try {
			FacesContext.getCurrentInstance().getExternalContext().getSessionMap().remove("prin");
			FacesContext.getCurrentInstance().getExternalContext().getSessionMap().remove(LoginController.USER_AUTENTICH);
			FacesContext.getCurrentInstance().getExternalContext().redirect(PAGE_PRINCIPAL);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		return  null;
	}
	
	
	/*setter and getter*/
	public String getUserAcces() {
		return userAcces;
	}

	public void setUserAcces(String userAcces) {
		this.userAcces = userAcces;
	}

	
}
